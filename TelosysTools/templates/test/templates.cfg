#---------------------------------------------------------
# Templates configuration file
# Values separated by ";"
# . value 1 : the label
# . value 2 : the file to be generated ( var allowed : ${BEANNAME}, ${BEANNAME_UC}, ${BEANNAME_LC} )
# . value 3 : the project folder where to generate ( var allowed : ${BEANNAME}, ${BEANNAME_UC}, ${BEANNAME_LC} )
# . value 4 : the template to use
# . value 5 : number of execution : "1" for "ONCE" for all entities, default is multiple executions ( executed for each entity )
#---------------------------------------------------------
# Since v 2.0 the project's variables can be used in file and folder name
#---------------------------------------------------------

# Test
Mock values					; MockValues.java               		; ${TEST_SRC}/${ROOT_PKG}/test 						; MockValues.vm                 						; 1
AppTestInitializer			; ApplicationTests.java					; ${TEST_SRC}/${ROOT_PKG}/configuration 			; configuration/ApplicationTests_java.vm				; 1
ConfigurationTest			; ConfigurationTest.java				; ${TEST_SRC}/${ROOT_PKG}/configuration 			; configuration/ConfigurationTest_java.vm				; 1
JPAConfTest					; JPAConfTest.java						; ${TEST_SRC}/${ROOT_PKG}/configuration 			; configuration/JPAConfTest_java.vm						; 1

Type conversion 			; ConversionServiceFactoryBeanTest.java	; ${TEST_SRC}/${ROOT_PKG}/web/convert    			; web_convert/ConversionServiceFactoryBeanTest_java.vm 	; 1
		
# Entity Factory		
Entity Factory for 			; ${BEANNAME}FactoryForTest.java 		; ${TEST_SRC}/${ROOT_PKG}/test 						; ENTITY_FactoryForTest_java.vm 						; *
		
# Spring MVC 		
Entity Controller   		; ${BEANNAME}ControllerTest.java 		; ${TEST_SRC}/${ROOT_PKG}/web/controller    		; web_controller/ENTITY_ControllerTest_java.vm 			; *
		
Entity mock tool        	; ${BEANNAME}EntityMock.java         	; ${TEST_SRC}/${ROOT_PKG}/mock           			; entity_mock.vm    									; *
Bean mock tool        		; ${BEANNAME}Mock.java         			; ${TEST_SRC}/${ROOT_PKG}/mock           			; bean_mock.vm    										; *

Generic service  class    	; GenericFakeService.java         		; ${TEST_SRC}/${ROOT_PKG}/persistence/commons/fake	; env/GenericFakeService.vm         					; 1
#Persistence service implem	; ${BEANNAME}PersistenceFAKE.java		; ${TEST_SRC}/${ROOT_PKG}/persistence/services/fake	; persistence_service_fake.vm 							; *
Persistence service JUnit 	; ${BEANNAME}PersistenceTest.java		; ${TEST_SRC}/${ROOT_PKG}/test/persistence    		; persistence_service_junit.vm 							; *

Entity Factory for 			; ${BEANNAME}EntityFactoryForTest.java 	; ${TEST_SRC}/${ROOT_PKG}/test 						; ENTITY_EntityFactoryForTest_java.vm 					; *
Factory for 	 			; ${BEANNAME}FactoryForTest.java 		; ${TEST_SRC}/${ROOT_PKG}/test 						; ENTITY_FactoryForTest_java.vm 						; *

Service Implementation  	; ${BEANNAME}ServiceImplTest.java 		; ${TEST_SRC}/${ROOT_PKG}/business/service/impl 	; business/service_impl_test.vm 						; *
Service Mapper 	 			; ${BEANNAME}ServiceMapperTest.java 	; ${TEST_SRC}/${ROOT_PKG}/business/service/mapping 	; business/service_mapper_test.vm 						; *

#Dao test
DaoImplTest  				; ${BEANNAME}DaoImplTest.java 			; ${TEST_SRC}/${ROOT_PKG}/dao 						; dao/DaoImplTest_java.vm 								; *
EntityDaoImplTest			; EntityDaoImplTest.java				; ${TEST_SRC}/${ROOT_PKG}/dao 						; dao/EntityDaoImplTest_java.vm							; 1
DataTypeFactory				; DataTypeFactory.java					; ${TEST_SRC}/${ROOT_PKG}/utility 					; dao/DataTypeFactory_java.vm							; 1

#test resource
properties:test				; test.properties						; ${TEST_RES}/resources 							; properties/test_properties.vm							; 1
properties:dev				; development.properties				; ${TEST_RES}/resources 							; properties/development_properties.vm					; 1
properties:prod				; database.properties					; ${TEST_RES}/resources 							; properties/database_properties.vm						; 1
