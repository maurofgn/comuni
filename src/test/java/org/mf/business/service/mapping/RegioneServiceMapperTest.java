/*
 * Created on 5 ago 2016 ( Time 15:52:31 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.mf.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.mf.bean.Regione;
import org.mf.bean.jpa.RegioneEntity;
import org.mf.enu.Nose;
import org.mf.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class RegioneServiceMapperTest {

	private RegioneServiceMapper regioneServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		regioneServiceMapper = new RegioneServiceMapper();
		regioneServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'RegioneEntity' to 'Regione'
	 * @param regioneEntity
	 */
	@Test
	public void testMapRegioneEntityToRegione() {
		// Given
		RegioneEntity regioneEntity = new RegioneEntity();
		regioneEntity.setNome(mockValues.nextString(80));
		regioneEntity.setNose(mockValues.nextString(15));
		
		// When
		Regione regione = regioneServiceMapper.mapRegioneEntityToRegione(regioneEntity);
		
		// Then
		assertEquals(regioneEntity.getNome(), regione.getNome());
		assertEquals(regioneEntity.getNose(), regione.getNose());
	}
	
	/**
	 * Test : Mapping from 'Regione' to 'RegioneEntity'
	 */
	@Test
	public void testMapRegioneToRegioneEntity() {
		// Given
		Regione regione = new Regione();
		regione.setNome(mockValues.nextString(80));
		regione.setNose(Nose.Centro);

		RegioneEntity regioneEntity = new RegioneEntity();
		
		// When
		regioneServiceMapper.mapRegioneToRegioneEntity(regione, regioneEntity);
		
		// Then
		assertEquals(regione.getNome(), regioneEntity.getNome());
		assertEquals(regione.getNose(), regioneEntity.getNose());
	}

}