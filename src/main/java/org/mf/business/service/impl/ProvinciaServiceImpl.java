/*
 * Created on 5 ago 2016 ( Time 15:52:43 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 * 
 */
package org.mf.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.mf.bean.Provincia;
import org.mf.bean.jpa.ProvinciaEntity;
import org.mf.business.service.ProvinciaService;
import org.mf.business.service.mapping.ProvinciaServiceMapper;
import org.mf.data.repository.jpa.ProvinciaJpaRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.convert.converter.Converter;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.domain.Sort.Direction;
import org.springframework.data.domain.Sort.Order;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;


/**
 * Implementation of ProvinciaService
 *
 */
@Service("provinciaService")
@Transactional
public class ProvinciaServiceImpl implements ProvinciaService {

	@Autowired
	private ProvinciaJpaRepository provinciaJpaRepository;

	@Autowired
	private ProvinciaServiceMapper provinciaServiceMapper;
	
	@Override
	public Provincia findById(Integer provinciaId) {
		ProvinciaEntity provinciaEntity = provinciaJpaRepository.findOne(provinciaId);
		return provinciaServiceMapper.mapProvinciaEntityToProvincia(provinciaEntity);
	}

	@Override
	public Page<Provincia> findAll(Pageable pageRequest) {
		
		if (pageRequest == null)
			pageRequest = new PageRequest(
				  0, 20
//				  , new Sort(new Order(Direction.ASC, "description"), new Order(Direction.DESC, "value"))	//only for example
				);
		
		Page<ProvinciaEntity> pageEntity = provinciaJpaRepository.findAll(pageRequest);
		
//		Page<Provincia> page = pageEntity.map(this::convertToProvincia);	//method reference. need at least java 8
		Page<Provincia> page = pageEntity.map(new Converter<ProvinciaEntity, Provincia>() {
					@Override
					public Provincia convert(ProvinciaEntity provinciaEntity) {
						return provinciaServiceMapper.mapProvinciaEntityToProvincia(provinciaEntity);
					}
				});
		
		return page;
	}

	@Override
	public List<Provincia> findAll() {
		Sort sort = new Sort(new Order(Direction.ASC, "nome"));
		Iterable<ProvinciaEntity> entities = provinciaJpaRepository.findAll(sort);
		List<Provincia> beans = new ArrayList<Provincia>();
		for(ProvinciaEntity provinciaEntity : entities) {
			beans.add(provinciaServiceMapper.mapProvinciaEntityToProvincia(provinciaEntity));
		}
		return beans;
	}

	@Override
	public Provincia save(Provincia provincia) {
		return update(provincia) ;
	}

	@Override
	public Provincia create(Provincia provincia) {
		ProvinciaEntity provinciaEntity = null;
		if (provincia.getProvinciaId() != null) {
			provinciaEntity = provinciaJpaRepository.findOne(provincia.getProvinciaId());
			if( provinciaEntity != null ) {
				throw new IllegalStateException("already.exists");
			}
		}
		provinciaEntity = new ProvinciaEntity();
		provinciaServiceMapper.mapProvinciaToProvinciaEntity(provincia, provinciaEntity);
		ProvinciaEntity provinciaEntitySaved = provinciaJpaRepository.save(provinciaEntity);
		return provinciaServiceMapper.mapProvinciaEntityToProvincia(provinciaEntitySaved);
	}

	@Override
	public Provincia update(Provincia provincia) {
		ProvinciaEntity provinciaEntity = provinciaJpaRepository.findOne(provincia.getProvinciaId());
		provinciaServiceMapper.mapProvinciaToProvinciaEntity(provincia, provinciaEntity);
		ProvinciaEntity provinciaEntitySaved = provinciaJpaRepository.save(provinciaEntity);
		return provinciaServiceMapper.mapProvinciaEntityToProvincia(provinciaEntitySaved);
	}

	@Override
	public void delete(Integer provinciaId) {
		provinciaJpaRepository.delete(provinciaId);
	}

	public ProvinciaJpaRepository getProvinciaJpaRepository() {
		return provinciaJpaRepository;
	}

	public void setProvinciaJpaRepository(ProvinciaJpaRepository provinciaJpaRepository) {
		this.provinciaJpaRepository = provinciaJpaRepository;
	}

	public ProvinciaServiceMapper getProvinciaServiceMapper() {
		return provinciaServiceMapper;
	}

	public void setProvinciaServiceMapper(ProvinciaServiceMapper provinciaServiceMapper) {
		this.provinciaServiceMapper = provinciaServiceMapper;
	}

}
